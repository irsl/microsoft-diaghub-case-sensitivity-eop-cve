<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Syntax_LaunchArgsFlag" xml:space="preserve">
    <value>&lt;executableArgs&gt;</value>
  </data>
  <data name="Description_PostToAgentFlag" xml:space="preserve">
    <value>CLSID of the agent to post the string to</value>
  </data>
  <data name="Description_LifetimeProcessFlag" xml:space="preserve">
    <value>Process used to associate lifetime of collection session with. If this process terminates the associated collection session will immediately terminate.</value>
  </data>
  <data name="Error_CollectionResultMoveError" xml:space="preserve">
    <value>Error getting collection output. Result can be found at '{0}'.</value>
  </data>
  <data name="SessionState_Running" xml:space="preserve">
    <value>Running</value>
  </data>
  <data name="ErrMsg_DocumentContainsNoConvertableTools" xml:space="preserve">
    <value>Document contains no tool data that can be viewed in Vspx format.</value>
  </data>
  <data name="Description_LaunchFlag" xml:space="preserve">
    <value>Path to the executable to launch</value>
  </data>
  <data name="Message_VspxConversion" xml:space="preserve">
    <value>Converted "{0}" to "{1}"</value>
  </data>
  <data name="Description_MonitorFlag" xml:space="preserve">
    <value>Monitor the session after it is started - status updates will be displayed and the command will block until the session ends</value>
  </data>
  <data name="Error_DiagSessionMustBeSupplied" xml:space="preserve">
    <value>Path to existing DiagSession must be supplied.</value>
  </data>
  <data name="Description_Stop" xml:space="preserve">
    <value>Stop a collection session</value>
  </data>
  <data name="Description_Help" xml:space="preserve">
    <value>Print out this help message</value>
  </data>
  <data name="Error_FailedToResumeProcess" xml:space="preserve">
    <value>Failed to resume process {0}. {1}</value>
  </data>
  <data name="Description_LoadAgentFlag" xml:space="preserve">
    <value>Agent to be loaded - this option may be specified multiple times to load multiple agents</value>
  </data>
  <data name="Description_ExpandDiagSession" xml:space="preserve">
    <value>Expand the DiagSession archive into a subdirectory adjacent to the DiagSession.</value>
  </data>
  <data name="ErrMsg_InvalidDocumentConversionDestination" xml:space="preserve">
    <value>The destination "{0}" for converting DiagSession is invalid.</value>
  </data>
  <data name="Error_ValueMustBeSpecified" xml:space="preserve">
    <value>Value must be specified for '{0}'.</value>
  </data>
  <data name="Description_MessageArg" xml:space="preserve">
    <value>Message to post to the collector agent</value>
  </data>
  <data name="Syntax_LifetimeProcessFlag" xml:space="preserve">
    <value>&lt;pid&gt;</value>
  </data>
  <data name="Arg_SessionId" xml:space="preserve">
    <value>&lt;sessionID&gt;</value>
  </data>
  <data name="Description_Pause" xml:space="preserve">
    <value>Pause a collection session</value>
  </data>
  <data name="Description_Start" xml:space="preserve">
    <value>Start a collection session</value>
  </data>
  <data name="Description_LaunchArgsFlag" xml:space="preserve">
    <value>Arguments for the executable to launch</value>
  </data>
  <data name="Syntax_PackageFlagArgs" xml:space="preserve">
    <value>[opt | dir]</value>
  </data>
  <data name="Error_InvalidSessionID" xml:space="preserve">
    <value>Invalid session ID: {0}. Session ID must be an integer in the range [0, 255] or a parsable Guid.</value>
  </data>
  <data name="SessionState_Stopped" xml:space="preserve">
    <value>Stopped</value>
  </data>
  <data name="Arg_DiagSession" xml:space="preserve">
    <value>&lt;diagSession&gt;</value>
  </data>
  <data name="Description_DiagSessionArg" xml:space="preserve">
    <value>Path to DiagSession</value>
  </data>
  <data name="Description_Commands" xml:space="preserve">
    <value>Commands:</value>
  </data>
  <data name="Syntax_LaunchFlag" xml:space="preserve">
    <value>&lt;executable&gt;</value>
  </data>
  <data name="Syntax_AttachFlag" xml:space="preserve">
    <value>&lt;pid&gt;[;&lt;pid&gt;;...]</value>
  </data>
  <data name="ErrMsg_DocumentContainsNoConvertableData" xml:space="preserve">
    <value>Document contains no data that can be viewed in Vspx format.</value>
  </data>
  <data name="SessionState_Paused" xml:space="preserve">
    <value>Paused</value>
  </data>
  <data name="Error_SessionIdMustBeSpecified" xml:space="preserve">
    <value>The session ID must be specified.</value>
  </data>
  <data name="Error_CollectorServiceNotFound" xml:space="preserve">
    <value>VS Standard Collector instance could not be found.
Installation may be corrupt. Please try repairing your installation.</value>
  </data>
  <data name="Error_ValueMayOnlyBeSpecifiedOnce" xml:space="preserve">
    <value>Value for '{0}' may only be specified once.</value>
  </data>
  <data name="SessionState_Errored" xml:space="preserve">
    <value>Errored</value>
  </data>
  <data name="Syntax_DetachFlag" xml:space="preserve">
    <value>&lt;pid&gt;[;&lt;pid&gt;;...]</value>
  </data>
  <data name="Description_AttachFlag" xml:space="preserve">
    <value>Semi-colon-delimited list of process IDs to target</value>
  </data>
  <data name="Description_PostString" xml:space="preserve">
    <value>Post a string to a collection agent</value>
  </data>
  <data name="Description_ScratchLocationFlag" xml:space="preserve">
    <value>Path to the desired output folder</value>
  </data>
  <data name="Syntax_LoadAgentFlag" xml:space="preserve">
    <value>&lt;agentCLSID&gt;;&lt;agentName&gt;[;&lt;config&gt;]</value>
  </data>
  <data name="Error_InvalidCommand" xml:space="preserve">
    <value>Invalid command: '{0}'</value>
  </data>
  <data name="Description_OutputFlag" xml:space="preserve">
    <value>Path to the desired output file</value>
  </data>
  <data name="Description_DetachFlag" xml:space="preserve">
    <value>Semi-colon-delimited list of process IDs to detach from</value>
  </data>
  <data name="Error_MessageMustBeSpecified" xml:space="preserve">
    <value>The message to post must be specified.</value>
  </data>
  <data name="Error_InvalidOption" xml:space="preserve">
    <value>Invalid command option: '{0}'</value>
  </data>
  <data name="Error_InvalidValue" xml:space="preserve">
    <value>Invalid value for '{0}': '{1}'.</value>
  </data>
  <data name="Syntax_OutputFlag" xml:space="preserve">
    <value>&lt;fileName&gt;</value>
  </data>
  <data name="Message_SessionState" xml:space="preserve">
    <value>Session {0}: {1}
  {2}</value>
  </data>
  <data name="Description_PackageFlag" xml:space="preserve">
    <value>Options for the package flag: 'opt' - Optimized archive format, 'dir' - Directory format</value>
  </data>
  <data name="Error_BothValuesMustBeSpecified" xml:space="preserve">
    <value>Value must be specified for '{0}' when using '{1}'.</value>
  </data>
  <data name="Message_CollectionResult" xml:space="preserve">
    <value>Collection result moved to '{0}'.</value>
  </data>
  <data name="Description_SessionIdArg" xml:space="preserve">
    <value>ID of the collection session - this should be a number in the range [0, 255] or a parsable Guid.</value>
  </data>
  <data name="Error_InvalidAgentPath" xml:space="preserve">
    <value>Invalid agent DLL path: '{0}'</value>
  </data>
  <data name="Error_FailedToLaunchProcess" xml:space="preserve">
    <value>Failed to launch process '{0}'. {1}</value>
  </data>
  <data name="Description_Update" xml:space="preserve">
    <value>Update a collection session. This allows addition and removal of target processes and collector agents.</value>
  </data>
  <data name="Error_SessionDoesNotExist" xml:space="preserve">
    <value>Session {0} does not exist.</value>
  </data>
  <data name="Description_HelpInstructions" xml:space="preserve">
    <value>For a detailed description of each command:
  {0} &lt;command&gt; /{1}
</value>
  </data>
  <data name="SessionState_Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="Description_Arguments" xml:space="preserve">
    <value>Arguments:</value>
  </data>
  <data name="SessionState_Created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="ErrMsg_FailedToLoadProxyStubsBinary" xml:space="preserve">
    <value>Failed to load the COM proxy for the VS Standard Collector service.
Installation may be corrupt. Please try repairing your installation.</value>
  </data>
  <data name="Error_CollectorHostNotFound" xml:space="preserve">
    <value>VS Standard Collector Host could not be started.
Installation may be corrupt. Please try repairing your installation.</value>
  </data>
  <data name="Arg_Message" xml:space="preserve">
    <value>&lt;messageString&gt;</value>
  </data>
  <data name="Description_Status" xml:space="preserve">
    <value>Display the status of a collection session</value>
  </data>
  <data name="Syntax_PostToAgentFlag" xml:space="preserve">
    <value>&lt;agentCLSID&gt;</value>
  </data>
  <data name="Description_Resume" xml:space="preserve">
    <value>Resume a collection session</value>
  </data>
  <data name="ErrMsg_RegistrationEntryPointNotFound" xml:space="preserve">
    <value>Failed to access the COM proxy entry point for the VS Standard Collector service.
Installation may be corrupt. Please try repairing your installation.</value>
  </data>
  <data name="Error_DuplicateAgent" xml:space="preserve">
    <value>Duplicate agent: '{0}'</value>
  </data>
  <data name="Syntax_ScratchLocationFlag" xml:space="preserve">
    <value>&lt;folderName&gt;</value>
  </data>
</root>